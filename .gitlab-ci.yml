#  _    __                              _          ____ ___
# | |_ / _|      _ __         __ _  ___(_)        / ___|_ _|
# | __| |_ _____| '_ \ _____ / _` |/ __| |       | |    | |
# | |_|  _|_____| |_) |_____| (_| | (__| |_ _ _  | |___ | |
#  \__|_|       | .__/       \__, |\___|_(_|_|_)  \____|___|
#               |_|          |___/
#
# Build; create a release if we're on a tag.
#
# ...somewhat primitive, but works for now :)

workflow:
  rules:
    # run for merge requests
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    # don't run duplicate when we have a MR pipeline already going
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    # run for all other branch commits
    - if: '$CI_COMMIT_BRANCH'
    # run for our version tags
    - if: '$CI_COMMIT_TAG =~ /^v.*/'
    # skip any others

stages:
  - test
  - publish

test:
  stage: test
  image: golang:1.17
  variables:
    GOPATH: $CI_PROJECT_DIR/.gocache
  before_script:
    - mkdir -p $GOPATH
  script:
    - make terraform-provider-gitlabci
    - TF_ACC=1 go test -v --cover ./internal/provider
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v.*/'
      when: never
    - changes:
      - '*.go'
      - 'go.mod'
      - 'go.sum'
      - 'internal/**/*.go'
      - 'third_party/**/*.go'
  cache:
    key: $CI_JOB_STAGE
    paths:
      - .gocache

check-gen-docs:
  # ensure our generated docs are all built out the way they should be
  stage: test
  image: registry.gitlab.com/rsrchboy/golang-terraform:latest
  script:
    - go generate
    - git diff --exit-code --quiet
      # generate return is the number of untracked files
    - exit "$(git ls-files --others --exclude-standard | wc -l)"
  after_script:
    - git diff
    - git ls-files --others --exclude-standard
  rules:
    # run for merge requests
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

publish:
  stage: publish
  image:
    name: docker.io/goreleaser/goreleaser
    entrypoint: ['']
  variables:
    GITLAB_TOKEN: $CI_JOB_TOKEN
    GIT_DEPTH: 0
    GOPATH: $CI_PROJECT_DIR/.gocache
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v.*/'
  before_script:
    - mkdir -p $GOPATH
    - apk update && apk add gnupg
    - gpg-agent --daemon --default-cache-ttl 7200
    - cat $GPG_SIGNING_KEY | gpg --import --batch --no-tty
    - echo "frobnips!" > /tmp/foo
    - gpg --detach-sig --yes -v --output=/dev/null --pinentry-mode loopback --passphrase-file "$GPG_PASSWORD" /tmp/foo
  script:
    - goreleaser release --rm-dist
  cache:
    key: $CI_JOB_STAGE
    paths:
      - .gocache
